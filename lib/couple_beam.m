% ------------------------------------------------------------------------
% couple_beam
% ------------------------------------------------------------------------
% Michael Hughes  m.r.hughes@kent.ac.uk
% Applied Optics Group, University of Kent
% research.kent.ac.uk/applied-optics
%
% License: BSD [https://opensource.org/licenses/BSD-3-Clause]
% ------------------------------------------------------------------------
%
% Calculate coupling of field into modes of a fibre by computing the 
% overlap integral between an input field and each of the fibre modes. 
% Returns the excitation coefficient for each mode, a complex number 
% giving the amplitude and phase for that mode.
%
% Usage:
%  [modeCouplingSin, modeCouplingCos, modeCouplingIntensity] = couple_beam(inField, modeSin, modeCos)
%
% Parameters:
%   inField = 2D complex array, input field [x,y]
%   modeSin/Cos = 3D arrays plotting amplitude of each mode (sin and os rotations)
%              [x,y,mode]. Can be generated by plot_all_LP_modes.
% 
% Returns:
%         modeCouplingSin = vector, excitation coefficient for each mode (sin rotation)
%         modeCouplingCos = vector, excitation coefficient for each mode (sin rotation)             
%   modeCouplingIntensity = vector, power in each mode (sin + cos)
function [modeCouplingSin, modeCouplingCos, modeCouplingIntensity] = couple_beam(inField, modeSin, modeCos)

    nModes = size(modeSin,3);
    
    modeCouplingSin = zeros(nModes,1);
    modeCouplingCos = zeros(nModes,1);
    modeCouplingIntensity = zeros(nModes,1);
    
    for iMode = 1:nModes
   
        % Calculate amplitude coupled into each mode by overlap integral
        % Need to do it for both sin and cos orientations of each mode 
        % and add then square to get total coupled intensity
             
        modeCouplingSin(iMode) = sum(sum(inField.*modeSin(:,:,iMode))) / sum(sum(modeSin(:,:,iMode).^2));
        modeCouplingCos(iMode) = sum(sum(inField.*modeCos(:,:,iMode))) / sum(sum(modeCos(:,:,iMode).^2));
        
        % For l=0 modes (rotational degenerate)
        if isnan(modeCouplingCos(iMode))
            modeCouplingCos(iMode) = 0;
        end

        % Calculate power in mode
        modeCouplingIntensity(iMode) = abs(modeCouplingSin(iMode) + modeCouplingCos(iMode))^2;

    end
    
end